@using ITOps.Utilities
@using Sales.API.Model
@using System.Dynamic
@using System.Net.Http

@inject HttpClient Http

@if (_compositionModel == null)
{
    <p><em>Loading...</em></p>
}
else
{
    if (_compositionModel.Sales?.OrdersMap != null && _compositionModel.Catalog?.OrdersMap != null)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>OrderId</th>
                    <th>Price</th>
                    <th>SKU</th>
                </tr>
            </thead>
            <tbody>
            @foreach(var key in _compositionModel.Sales.OrdersMap.Keys)
            {
                var salesItem = _compositionModel.Sales.OrdersMap[key];
                var catalogItem = _compositionModel.Catalog.OrdersMap[key];

                <tr>
                    <td>@salesItem.OrderId</td>
                    <td>@salesItem.Price</td>
                    <td>@catalogItem.Name</td>
                </tr>
            }
            </tbody>
        </table>
    }
}

@code {
    private OrdersIndexCompositeModel? _compositionModel;

    protected override async Task OnInitializedAsync()
    {
        _compositionModel = await Http.GetFromJsonAsync<OrdersIndexCompositeModel>($"api/orders");
    }
}
